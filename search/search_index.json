{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Neme!!!!","text":""},{"location":"#im-happy-to-share-my-mkdocs-for-testing-implemienting-git-hub","title":"I'm happy to share my mkdocs for testing, implemienting git hub","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Database/","title":"base de datos","text":"<p>Base de datos</p> <p>Una tabla en MySQL es una estructura dentro de una base de datos que organiza los datos en filas y columnas, como si fuera una hoja de c\u00e1lculo.</p> <p>Cada fila (row) representa un registro individual, y cada columna (column) representa un campo de dato</p> <p>Ejemplo: Una tabla alumnos podr\u00eda tener columnas como id, nombre, edad, correo, etc., y cada fila representa un alumno distinto.</p> <p></p> <p>Ejemplo de tabla en SQL</p> <pre> ```sql title=\"Crear tabla alumnos\" CREATE TABLE alumnos ( id INT AUTO_INCREMENT PRIMARY KEY, nombre VARCHAR(100), correo VARCHAR(100) ); ``` </pre> <p>```sql CREATE TABLE alumnos (     id INT AUTO_INCREMENT PRIMARY KEY,     nombre VARCHAR(100) NOT NULL,     edad INT,     correo VARCHAR(100) UNIQUE );</p>"},{"location":"aboutneme/","title":"aboutneme","text":""},{"location":"aboutneme/#second-test-neme","title":"second test Neme","text":""},{"location":"new-test/","title":"My mkdocs link https://vpenat81.github.io/vpenadocs/","text":""},{"location":"new-test/#documentation-how-to-deploy-my-docs-on-mkdocs","title":"Documentation how to deploy my docs on mkdocs","text":"<p>Workflow Summary Edit your .md files in docs/</p> <ol> <li> <p>Update mkdocs.yml to reflect new pages</p> </li> <li> <p>Run mkdocs serve to preview</p> </li> <li> <p>Run git add ., git commit -m \"...\", git push</p> </li> <li> <p>Deploy with mkdocs gh-deploy</p> </li> </ol>"},{"location":"new-test/#commands-after-editing","title":"Commands (after editing)","text":"<p>Command What it does mkdocs serve        Preview docs live at http://127.0.0.1:8000/ mkdocs build        Builds the updated site into the site/ folder mkdocs gh-deploy    Publishes your changes to GitHub Pages</p>"},{"location":"new-test/#sintaxis-basica-de-markdown","title":"Sintaxis b\u00e1sica de Markdown","text":"<p>Encabezados: Se crean usando el car\u00e1cter # seguido de texto. Por ejemplo, # Titulo Principal genera un encabezado de nivel 1.  Texto en negrita: Se puede lograr envolviendo el texto con dos asteriscos ** o dos guiones bajos __. Por ejemplo, Esto es negrita.  Texto en cursiva: Se puede lograr envolviendo el texto con un asterisco * o un gui\u00f3n bajo _. Por ejemplo, Esto es cursiva.  Listas: Se crean usando los s\u00edmbolos -, *, o + para listas no ordenadas, y usando n\u00fameros seguidos de un punto para listas ordenadas.  Enlaces: Se crean usando la sintaxis Texto del enlace.  Im\u00e1genes: Se crean usando la sintaxis !Texto alternativo.  Bloques de c\u00f3digo: Se pueden crear utilizando tres backticks ```` al inicio y al final del bloque de c\u00f3digo. </p>"}]}